import{_ as t,c as p,d as s,a as o,e as a,b as l,w as c,r as i,o as r}from"./app-C1uG88mu.js";const u={};function d(v,n){const e=i("RouteLink");return r(),p("div",null,[n[3]||(n[3]=s("h1",{id:"counters",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#counters"},[s("span",null,"Counters")])],-1)),n[4]||(n[4]=s("h2",{id:"counter-chatbot-api",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#counter-chatbot-api"},[s("span",null,"Counter Chatbot API")])],-1)),n[5]||(n[5]=s("p",null,[a("Our chatbot has a basic set of Database functions, this is almost a key value store ordered by the key and value combined. We lazy-load the data from the database. This means that if you use "),s("code",null,"set"),a(" and then make a "),s("code",null,"db"),a(", you may still have cached data.")],-1)),s("p",null,[n[1]||(n[1]=a("More information about the database can be found ",-1)),l(e,{to:"/docs/chatbot/template-reference.html#database"},{default:c(()=>[...n[0]||(n[0]=[a("here",-1)])]),_:1}),n[2]||(n[2]=a(".",-1))]),n[6]||(n[6]=o(`<table><thead><tr><th>Function</th><th>Description</th></tr></thead><tbody><tr><td><code>db(&#39;counters&#39;).example</code></td><td>Fetch the <code>example</code> from the <code>counters</code> table.</td></tr><tr><td><code>inc(&#39;counters&#39;, &#39;example&#39;, 1)</code></td><td>Increment the <code>example</code> from the <code>counters</code> table.</td></tr><tr><td><code>dec(&#39;counters&#39;, &#39;example&#39;, 1)</code></td><td>Decrement the <code>example</code> from the <code>counters</code> table.</td></tr><tr><td><code>set(&#39;counters&#39;, &#39;example&#39;, 1)</code></td><td>Set the <code>example</code> from the <code>counters</code> table.</td></tr></tbody></table><h2 id="counter-http-api" tabindex="-1"><a class="header-anchor" href="#counter-http-api"><span>Counter HTTP API</span></a></h2><p>You can use the following API to interact with the counters. Most of these endpoints are designed to accept multiple counters at once to reduce the amount of requests.</p><h3 id="get-counters" tabindex="-1"><a class="header-anchor" href="#get-counters"><span>Get Counters</span></a></h3><p>Get all counters for a given bot.</p><div class="language-http line-numbers-mode" data-highlighter="prismjs" data-ext="http"><pre><code class="language-http"><span class="line">GET /v1/bots/2/counters</span>
<span class="line"><span class="token header"><span class="token header-name keyword">Content-Type</span><span class="token punctuation">:</span> <span class="token header-value">application/json</span></span></span>
<span class="line"><span class="token application-json"></span>
<span class="line"><span class="token punctuation">[</span></span>
<span class="line">    <span class="token punctuation">{</span></span>
<span class="line">        <span class="token property">&quot;name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;test&quot;</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token property">&quot;keyword&quot;</span><span class="token operator">:</span> <span class="token string">&quot;test&quot;</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token property">&quot;value&quot;</span><span class="token operator">:</span> <span class="token number">10</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token property">&quot;active&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">]</span></span>
<span class="line"></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="create-counter" tabindex="-1"><a class="header-anchor" href="#create-counter"><span>Create Counter</span></a></h3><p>Create a set of counters for a given bot. At least one counter is required.</p><div class="language-http line-numbers-mode" data-highlighter="prismjs" data-ext="http"><pre><code class="language-http"><span class="line">POST /v1/bots/2/counters</span>
<span class="line"><span class="token header"><span class="token header-name keyword">Content-Type</span><span class="token punctuation">:</span> <span class="token header-value">application/json</span></span></span>
<span class="line"><span class="token application-json"></span>
<span class="line"><span class="token punctuation">[</span></span>
<span class="line">    <span class="token punctuation">{</span></span>
<span class="line">        <span class="token property">&quot;name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;test&quot;</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token property">&quot;keyword&quot;</span><span class="token operator">:</span> <span class="token string">&quot;test&quot;</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token property">&quot;value&quot;</span><span class="token operator">:</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token comment">// null is default</span></span>
<span class="line">        <span class="token property">&quot;active&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span> <span class="token comment">// true is default</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">]</span></span>
<span class="line"></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="update-counter" tabindex="-1"><a class="header-anchor" href="#update-counter"><span>Update Counter</span></a></h3><p>Update a set of counters for a given bot. At least one counter is required.</p><div class="language-http line-numbers-mode" data-highlighter="prismjs" data-ext="http"><pre><code class="language-http"><span class="line">PATCH /v1/bots/2/counters</span>
<span class="line"><span class="token header"><span class="token header-name keyword">Content-Type</span><span class="token punctuation">:</span> <span class="token header-value">application/json</span></span></span>
<span class="line"><span class="token application-json"></span>
<span class="line"><span class="token punctuation">[</span></span>
<span class="line">    <span class="token punctuation">{</span></span>
<span class="line">        <span class="token property">&quot;name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;test&quot;</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token property">&quot;keyword&quot;</span><span class="token operator">:</span> <span class="token string">&quot;test&quot;</span><span class="token punctuation">,</span> <span class="token comment">// optional</span></span>
<span class="line">        <span class="token property">&quot;active&quot;</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token comment">// optional</span></span>
<span class="line">        <span class="token property">&quot;value&quot;</span><span class="token operator">:</span> <span class="token number">5</span> <span class="token comment">// optional, if not set, the value will not be updated</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">]</span></span>
<span class="line"></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="set-increment-decrement-counter" tabindex="-1"><a class="header-anchor" href="#set-increment-decrement-counter"><span>Set, Increment, Decrement Counter</span></a></h3><p>Set, increment or decrement a set of counters for a given bot. At least one counter is required.</p><div class="language-http line-numbers-mode" data-highlighter="prismjs" data-ext="http"><pre><code class="language-http"><span class="line">POST /v1/bots/2/counters/values</span>
<span class="line"><span class="token header"><span class="token header-name keyword">Content-Type</span><span class="token punctuation">:</span> <span class="token header-value">application/json</span></span></span>
<span class="line"><span class="token application-json"></span>
<span class="line"><span class="token punctuation">[</span></span>
<span class="line">    <span class="token punctuation">{</span></span>
<span class="line">        <span class="token property">&quot;name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;test&quot;</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token property">&quot;value&quot;</span><span class="token operator">:</span> <span class="token number">3</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token property">&quot;operation&quot;</span><span class="token operator">:</span> <span class="token string">&quot;increment&quot;</span> <span class="token comment">// increment, decrement, set</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">]</span></span>
<span class="line"></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="delete-counters" tabindex="-1"><a class="header-anchor" href="#delete-counters"><span>Delete Counters</span></a></h3><p>Delete a set of counters for a given bot. At least one counter is required.</p><div class="language-http line-numbers-mode" data-highlighter="prismjs" data-ext="http"><pre><code class="language-http"><span class="line">DELETE /v1/bots/2/counters</span>
<span class="line"><span class="token header"><span class="token header-name keyword">Content-Type</span><span class="token punctuation">:</span> <span class="token header-value">application/json</span></span></span>
<span class="line"><span class="token application-json"></span>
<span class="line"><span class="token punctuation">[</span></span>
<span class="line">    <span class="token punctuation">{</span></span>
<span class="line">        <span class="token property">&quot;name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;test&quot;</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token punctuation">{</span></span>
<span class="line">        <span class="token property">&quot;name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;uuid&quot;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">]</span></span>
<span class="line"></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,18))])}const k=t(u,[["render",d]]),h=JSON.parse('{"path":"/docs/chatbot/counters.html","title":"Counters","lang":"en-US","frontmatter":{},"git":{},"filePathRelative":"docs/chatbot/counters.md"}');export{k as comp,h as data};

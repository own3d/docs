import{_ as s,c as a,a as t,o as e}from"./app-C1uG88mu.js";const p={};function o(c,n){return e(),a("div",null,[...n[0]||(n[0]=[t(`<h1 id="jukebox-api" tabindex="-1"><a class="header-anchor" href="#jukebox-api"><span>Jukebox API</span></a></h1><h2 id="player-sdk" tabindex="-1"><a class="header-anchor" href="#player-sdk"><span>Player SDK</span></a></h2><h3 id="introduction" tabindex="-1"><a class="header-anchor" href="#introduction"><span>Introduction</span></a></h3><blockquote><p>Embedding the Jukebox SDK on commercial websites is not allowed without prior written permission. Please contact us at developers@stream.tv for more information.</p></blockquote><p>Jukebox offers a Player SDK to embed Jukebox as a whitelabel solution in the website. End users who want to use Jukebox Player need at least a free OWN3D account.</p><h3 id="authentication-with-jukebox" tabindex="-1"><a class="header-anchor" href="#authentication-with-jukebox"><span>Authentication with Jukebox</span></a></h3><p>Use OWN3D Client Credentials.</p><h3 id="example" tabindex="-1"><a class="header-anchor" href="#example"><span>Example</span></a></h3><blockquote><p>Keep in mind that you need to include a VAST container so that you can use our SDK. With VAST we are able to integrate our advertising network. Removing or hiding the VAST Container is prohibited. The VAST container must be at least 400x225px and fixed visible on the web page.</p></blockquote><div class="language-html line-numbers-mode" data-highlighter="prismjs" data-ext="html"><pre><code class="language-html"><span class="line"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>en<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>UTF-8<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">&gt;</span></span>Jukebox Player SDK Example<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">&gt;</span></span><span class="token style"><span class="token language-css"><span class="token selector">.controls</span> <span class="token punctuation">{</span> <span class="token property">display</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span> <span class="token punctuation">}</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>vast-container<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>controls<span class="token punctuation">&quot;</span></span> <span class="token special-attr"><span class="token attr-name">onclick</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token value javascript language-javascript"><span class="token function">skipTrack</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span><span class="token punctuation">&quot;</span></span></span><span class="token punctuation">&gt;</span></span>Skip Track<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>controls<span class="token punctuation">&quot;</span></span> <span class="token special-attr"><span class="token attr-name">onclick</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token value javascript language-javascript"><span class="token function">shufflePlay</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span><span class="token punctuation">&quot;</span></span></span><span class="token punctuation">&gt;</span></span>Shuffle Play<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>https://static-cdn.jukebox.gg/js/jukebox-sdk.js<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript"></span>
<span class="line">    <span class="token comment">// VAST Video Container</span></span>
<span class="line">    Jukebox<span class="token punctuation">.</span><span class="token function">setVastContainer</span><span class="token punctuation">(</span>document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&#39;vast-container&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">// State updates like: Track, Timestamp, Play/Pause.</span></span>
<span class="line">    Jukebox<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;state.updated&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">state</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>state<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">// Player is ready! Play some tracks...</span></span>
<span class="line">    Jukebox<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;ready&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">state</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">var</span> elements <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementsByClassName</span><span class="token punctuation">(</span><span class="token string">&#39;controls&#39;</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> elements<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>
<span class="line">            elements<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>style<span class="token punctuation">.</span>display <span class="token operator">=</span> <span class="token string">&#39;inline&#39;</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">// Start authentication with your access token.</span></span>
<span class="line">    <span class="token comment">// The callback will be called every time we need a new token.</span></span>
<span class="line">    Jukebox<span class="token punctuation">.</span><span class="token function">authenticate</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token string">&#39;Bearer ...&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">function</span> <span class="token function">skipTrack</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        Jukebox<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">function</span> <span class="token function">shufflePlay</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        Jukebox<span class="token punctuation">.</span>axios</span>
<span class="line">            <span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">/v1/playlists/15b7c732-51e8-4b71-97fb-57319fe9d1af</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">response</span> <span class="token operator">=&gt;</span> response<span class="token punctuation">.</span>data<span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">playlist</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">                console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>playlist<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">                <span class="token keyword">let</span> track <span class="token operator">=</span> playlist<span class="token punctuation">.</span>tracks<span class="token punctuation">[</span>Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> playlist<span class="token punctuation">.</span>tracks<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">                Jukebox<span class="token punctuation">.</span><span class="token function">play</span><span class="token punctuation">(</span><span class="token punctuation">{</span></span>
<span class="line">                    <span class="token literal-property property">playlist_id</span><span class="token operator">:</span> playlist<span class="token punctuation">.</span>id<span class="token punctuation">,</span></span>
<span class="line">                    <span class="token literal-property property">track_id</span><span class="token operator">:</span> track<span class="token punctuation">.</span>id<span class="token punctuation">,</span></span>
<span class="line">                    <span class="token literal-property property">shuffle</span><span class="token operator">:</span> <span class="token string">&#39;on&#39;</span><span class="token punctuation">,</span></span>
<span class="line">                    <span class="token literal-property property">repeat</span><span class="token operator">:</span> <span class="token string">&#39;all&#39;</span><span class="token punctuation">,</span></span>
<span class="line">                <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="player-sdk-api" tabindex="-1"><a class="header-anchor" href="#player-sdk-api"><span>Player SDK API</span></a></h3><h4 id="jukebox-authenticate-authenticate-string" tabindex="-1"><a class="header-anchor" href="#jukebox-authenticate-authenticate-string"><span><code>Jukebox#authenticate(authenticate: : () =&gt; string)</code></span></a></h4><p>Intialize the Jukebox SDK. The <code>authenticate</code> callback will be called every time when the SDK needs an fresh API Access Token.</p><h4 id="jukebox-setvastcontainer-container-htmlelement" tabindex="-1"><a class="header-anchor" href="#jukebox-setvastcontainer-container-htmlelement"><span><code>Jukebox#setVastContainer(container: HTMLElement)</code></span></a></h4><p>Sets the container where Jukebox embeds the VAST player.<br> The VAST container must be at least 400x225px and fixed visible on the web page.</p><h4 id="jukebox-shuffle-promise-void-axiosresponse" tabindex="-1"><a class="header-anchor" href="#jukebox-shuffle-promise-void-axiosresponse"><span><code>Jukebox#shuffle(): Promise&lt;void|AxiosResponse&gt;</code></span></a></h4><p>Enables the shuffle mode. You can check the shuffle mude with <code>state.shuffle</code>. Possible values: <code>on</code> &amp; <code>off</code>.</p><h4 id="jukebox-repeat-promise-void-axiosresponse" tabindex="-1"><a class="header-anchor" href="#jukebox-repeat-promise-void-axiosresponse"><span><code>Jukebox#repeat(): Promise&lt;void|AxiosResponse&gt;</code></span></a></h4><p>Toggles the repeat mode. You can check the repeat mode with <code>state.repeat</code>. Possible values: <code>all</code>, <code>single</code> &amp; <code>off</code>.</p><h4 id="jukebox-play-attributes-object-promise-void-axiosresponse" tabindex="-1"><a class="header-anchor" href="#jukebox-play-attributes-object-promise-void-axiosresponse"><span><code>Jukebox#play(attributes: object): Promise&lt;void|AxiosResponse&gt;</code></span></a></h4><p>Plays a given track.</p><table><thead><tr><th>Attribute</th><th>Required</th><th>Description</th><th>Type</th></tr></thead><tbody><tr><td><code>playlist_id</code></td><td>No</td><td>UUID of the Playlist.</td><td><code>UUID</code></td></tr><tr><td><code>album_id</code></td><td>No</td><td>UUID of the Album.</td><td><code>UUID</code></td></tr><tr><td><code>track_id</code></td><td>Yes</td><td>UUID of the Track.</td><td><code>UUID</code></td></tr><tr><td><code>shuffle</code></td><td>Yes, if non-premium.</td><td>Shuffle Mode. Possible values: <code>on</code> &amp; <code>off</code>.</td><td><code>String</code></td></tr><tr><td><code>repeat</code></td><td>No</td><td>Repeat a single Track or Playlist/Album. Possible values: <code>all</code>, <code>single</code> &amp; <code>off</code>.</td><td><code>String</code></td></tr><tr><td><code>position</code></td><td>No</td><td>Set the initial position of this track.</td><td><code>Float</code></td></tr></tbody></table><h4 id="jukebox-next-promise-void-axiosresponse" tabindex="-1"><a class="header-anchor" href="#jukebox-next-promise-void-axiosresponse"><span><code>Jukebox#next(): Promise&lt;void|AxiosResponse&gt;</code></span></a></h4><p>Play the queued next track, if the player has a playlist or album in it&#39;s context.</p><h4 id="jukebox-previous-promise-void-axiosresponse" tabindex="-1"><a class="header-anchor" href="#jukebox-previous-promise-void-axiosresponse"><span><code>Jukebox#previous(): Promise&lt;void|AxiosResponse&gt;</code></span></a></h4><p>Play the previous track, if the player has a playlist or album in it&#39;s context.</p><h4 id="jukebox-pause-promise-void-axiosresponse" tabindex="-1"><a class="header-anchor" href="#jukebox-pause-promise-void-axiosresponse"><span><code>Jukebox#pause(): Promise&lt;void|AxiosResponse&gt;</code></span></a></h4><p>Pause the current playing track.</p><h4 id="jukebox-continue-promise-void-axiosresponse" tabindex="-1"><a class="header-anchor" href="#jukebox-continue-promise-void-axiosresponse"><span><code>Jukebox#continue(): Promise&lt;void|AxiosResponse&gt;</code></span></a></h4><p>Continue the current paused track.</p><h4 id="jukebox-volume-volume-number-void" tabindex="-1"><a class="header-anchor" href="#jukebox-volume-volume-number-void"><span><code>Jukebox#volume(volume: number): void</code></span></a></h4><p>Modify the volume of the track stream. Number between <code>0</code> and <code>1</code>, example <code>0.1</code> is 10% volume.</p><h4 id="jukebox-on-event-string-string-callback-function-this" tabindex="-1"><a class="header-anchor" href="#jukebox-on-event-string-string-callback-function-this"><span><code>Jukebox#on(event: string | string[], callback: Function): this</code></span></a></h4><p>Listen for a Jukebox event. Supported events: <code>ready</code> &amp; <code>state.updated</code>.</p><h4 id="jukebox-once-event-string-string-callback-function-this" tabindex="-1"><a class="header-anchor" href="#jukebox-once-event-string-string-callback-function-this"><span><code>Jukebox#once(event: string | string[], callback: Function): this</code></span></a></h4><p>Listen for a Jukebox event, but only once.</p><h4 id="jukebox-off-event-string-string-callback-function-this" tabindex="-1"><a class="header-anchor" href="#jukebox-off-event-string-string-callback-function-this"><span><code>Jukebox#off(event?: string | string[], callback?: Function): this</code></span></a></h4><p>Used to remove the custom event listener.</p><h4 id="jukebox-currenttime-position-number-void" tabindex="-1"><a class="header-anchor" href="#jukebox-currenttime-position-number-void"><span><code>Jukebox#currentTime(position: number): void</code></span></a></h4><p>Sets the position of the current track. You can get the current position with <code>state.position</code> and the total duration with <code>state.duration</code>.</p><h4 id="jukebox-isprimaryplayer-boolean" tabindex="-1"><a class="header-anchor" href="#jukebox-isprimaryplayer-boolean"><span><code>Jukebox#isPrimaryPlayer(): boolean</code></span></a></h4><p>Indicates if the player is playing music on another instance.</p><h4 id="jukebox-isplaying-boolean" tabindex="-1"><a class="header-anchor" href="#jukebox-isplaying-boolean"><span><code>Jukebox#isPlaying(): boolean</code></span></a></h4><p>Indicates if the player instance is playing music.</p><h2 id="api-reference" tabindex="-1"><a class="header-anchor" href="#api-reference"><span>API Reference</span></a></h2><p>Currently, the Jukebox API is within closed beta.</p>`,46)])])}const i=s(p,[["render",o]]),u=JSON.parse('{"path":"/docs/jukebox-api.html","title":"Jukebox API","lang":"en-US","frontmatter":{},"git":{},"filePathRelative":"docs/jukebox-api.md"}');export{i as comp,u as data};

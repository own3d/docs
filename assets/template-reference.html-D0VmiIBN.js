import{_ as n,c as s,a,d as e,e as o,b as r,r as c,o as i}from"./app-C1uG88mu.js";const h={},l={id:"functions",tabindex:"-1"},m={class:"header-anchor",href:"#functions"};function p(u,t){const d=c("Badge");return i(),s("div",null,[t[1]||(t[1]=a('<h1 id="template-reference" tabindex="-1"><a class="header-anchor" href="#template-reference"><span>Template Reference</span></a></h1><p>Each command has a context, which describes where the command was called and which command it is.</p><div class="hint-container warning"><p class="hint-container-title">Warning</p><p>This is tested on Twitch and may not work on other platforms.</p></div><h2 id="command" tabindex="-1"><a class="header-anchor" href="#command"><span>Command</span></a></h2><table><thead><tr><th>Field</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td>command.command</td><td>string</td><td>The command.</td></tr><tr><td>command.commands</td><td>array</td><td>List of all aliases including base command.</td></tr><tr><td>command.command_aliases</td><td>array</td><td>List of all aliases without base command.</td></tr><tr><td>command.response</td><td>mixed</td><td>User defined response or template script.</td></tr><tr><td>command.command_regex</td><td>string</td><td>Not used. Regex that will be evaluated when a user enters a command.</td></tr><tr><td>command.permissions</td><td>int</td><td>Limit who can execute the command.</td></tr><tr><td>command.price</td><td>int</td><td>Price paid for each call.</td></tr><tr><td>command.send_as</td><td>string</td><td>The way the response is sent.</td></tr><tr><td>command.enable_when</td><td>string</td><td>Commands can only be triggered offline/online/both.</td></tr><tr><td>command.user_cooldown</td><td>int</td><td>User Cooldown in seconds during which the command may not be executed.</td></tr><tr><td>command.global_cooldown</td><td>int</td><td>Channel Cooldown in seconds during which the command may not be executed.</td></tr><tr><td>command.is_visible</td><td>bool</td><td>Indicating whether the command is displayed in the command overview.</td></tr></tbody></table><h2 id="arguments" tabindex="-1"><a class="header-anchor" href="#arguments"><span>Arguments</span></a></h2><table><thead><tr><th>Field</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td>args</td><td>array</td><td>List of all arguments including base command.</td></tr></tbody></table><h2 id="irc" tabindex="-1"><a class="header-anchor" href="#irc"><span>IRC</span></a></h2><table><thead><tr><th>Field</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td>irc.channel</td><td>string</td><td>Raw channel username.</td></tr><tr><td>irc.message</td><td>string</td><td>Raw message.</td></tr></tbody></table><h2 id="object-reference" tabindex="-1"><a class="header-anchor" href="#object-reference"><span>Object Reference</span></a></h2><p>Some functions (described below) of the chatbot return objects. All objects are listed here:</p><h3 id="user" tabindex="-1"><a class="header-anchor" href="#user"><span>User</span></a></h3><table><thead><tr><th>Field</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td>id</td><td>string</td><td>User&#39;s ID.</td></tr><tr><td>name</td><td>string</td><td>User&#39;s display name.</td></tr><tr><td>type</td><td>string</td><td>User&#39;s broadcaster type: &quot;partner&quot;, &quot;affiliate&quot;, or &quot;&quot;.</td></tr><tr><td>description</td><td>string</td><td>User&#39;s channel description.</td></tr><tr><td>view_count</td><td>int</td><td>Total number of views of the user&#39;s channel.</td></tr></tbody></table><h3 id="channel" tabindex="-1"><a class="header-anchor" href="#channel"><span>Channel</span></a></h3><table><thead><tr><th>Field</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td>id</td><td>string</td><td>Twitch User ID of this channel owner.</td></tr><tr><td>name</td><td>string</td><td>Twitch user display name of this channel owner</td></tr><tr><td>url</td><td>string</td><td>Link to the channel.</td></tr><tr><td>language</td><td>string</td><td>Language of the channel.</td></tr><tr><td>title</td><td>string</td><td>Title of the stream.</td></tr><tr><td>game</td><td>string</td><td>Name of the game being played on the channel.</td></tr></tbody></table>',15)),e("h2",l,[e("a",m,[e("span",null,[t[0]||(t[0]=o("Functions ",-1)),r(d,{text:"beta",type:"warning"})])])]),t[2]||(t[2]=a(`<h3 id="database" tabindex="-1"><a class="header-anchor" href="#database"><span>Database</span></a></h3><p>You have access to a basic set of Database functions, this is almost a key value store ordered by the key and value combined.</p><p>We lazy-load the data from the database. This means that if you use <code>set</code> and then make a <code>db</code>, you may still have cached data.</p><table><thead><tr><th>Function</th><th>Description</th></tr></thead><tbody><tr><td><code>db(&#39;channel&#39;).name</code></td><td>Fetch the <code>name</code> from the <code>channel</code> table.</td></tr><tr><td><code>inc(&#39;membership&#39;, &#39;currency&#39;, 1)</code></td><td>Increment the <code>currency</code> from the <code>membership</code> table.</td></tr><tr><td><code>dec(&#39;membership&#39;, &#39;currency&#39;, 1)</code></td><td>Decrement the <code>currency</code> from the <code>membership</code> table.</td></tr><tr><td><code>set(&#39;membership&#39;, &#39;currency&#39;, 1)</code></td><td>Set the <code>currency</code> from the <code>membership</code> table.</td></tr></tbody></table><h3 id="cache" tabindex="-1"><a class="header-anchor" href="#cache"><span>Cache</span></a></h3><p>You also have access to a basic set of Cache functions, this is almost a key value store ordered by the key and value combined.</p><p>Data is stored in the cache for a maximum of one day. Always assume that data could not exist in a cache.</p><table><thead><tr><th>Function</th><th>Description</th></tr></thead><tbody><tr><td><code>cache(&#39;timely&#39;)</code></td><td>Fetch the value for the specified <code>key</code>.</td></tr><tr><td><code>cache(&#39;timely&#39;, 1, 300)</code></td><td>Sets the value for the specified <code>key</code> to the specified value. With Expiration in seconds.</td></tr><tr><td><code>cache(&#39;timely&#39;, 1)</code></td><td>Sets the value for the specified <code>key</code> to the specified value. With a default expiration of one day.</td></tr></tbody></table><h3 id="api" tabindex="-1"><a class="header-anchor" href="#api"><span>API</span></a></h3><p>If you want to retrieve twitch related information, then the following methods are available to you. Note that twitch now works with ID&#39;s instead of login name, so for some functions you have to enter the user ID instead of login name.</p><table><thead><tr><th>Function</th><th>Description</th></tr></thead><tbody><tr><td><code>user(&#39;username&#39;)</code></td><td>Fetch the user object from the twitch api by login name. The response returns a <code>User</code> object or null.</td></tr><tr><td><code>channel(&#39;106415581&#39;)</code></td><td>Fetch the channel object from the twitch api by user-id. The response returns a <code>Channel</code> object or null.</td></tr></tbody></table><h3 id="http-json-requests" tabindex="-1"><a class="header-anchor" href="#http-json-requests"><span>HTTP JSON Requests</span></a></h3><p>With the <code>json</code> function you can download data from a JSON API. The response can be an <code>array</code>, or <code>null</code> if the api returns an error.</p><div class="language-twig line-numbers-mode" data-highlighter="prismjs" data-ext="twig"><pre><code class="language-twig"><span class="line">Random Quote: <span class="token twig language-twig"><span class="token delimiter punctuation">{{</span> json<span class="token punctuation">(</span><span class="token string"><span class="token punctuation">&#39;</span>GET<span class="token punctuation">&#39;</span></span><span class="token punctuation">,</span> <span class="token string"><span class="token punctuation">&#39;</span>https://api.quotable.io/random<span class="token punctuation">&#39;</span></span><span class="token punctuation">)</span><span class="token punctuation">.</span>content <span class="token delimiter punctuation">}}</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><div class="hint-container tip"><p class="hint-container-title">Tips</p><p>Cache your json responses. Requests that take longer than 5 seconds are automatically aborted. Furthermore, this method has a rate limit of 15 requests per minute.</p></div>`,15))])}const f=n(h,[["render",p]]),y=JSON.parse('{"path":"/docs/chatbot/template-reference.html","title":"Template Reference","lang":"en-US","frontmatter":{},"git":{},"filePathRelative":"docs/chatbot/template-reference.md"}');export{f as comp,y as data};
